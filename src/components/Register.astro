---
import truck from '/recycling-truck.png'
---

<div class="flex min-h-full items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
  <div class="w-full max-w-md space-y-8">
    <div>
      <img class="mx-auto h-32 w-auto" src={truck} alt="Workflow">
      <h2 class="mt-6 text-center text-3xl font-bold tracking-tight text-gray-900">Register</h2>
    </div>
    <form class="mt-8 space-y-6" action="/" method="POST">
      <input type="hidden" name="remember" value="true">
      <div class="space-y-2 rounded-lg shadow-sm w-96">
        <div>
            <label for="username" class="sr-only">Username</label>
            <input id="username" name="username" value="" type="text" autocomplete="username" required class="relative block w-full rounded-t-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6" placeholder="Username">
          </div>
        <div>
          <label for="email-address" class="sr-only">Email address</label>
          <input id="email-address" name="email" value="" type="email" autocomplete="email" required class="relative block w-full rounded-t-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6" placeholder="Email address">
        </div>
        <div>
          <label for="password" class="sr-only">Password</label>
          <input id="password" name="password" value="" type="password" autocomplete="current-password" required class="relative block w-full rounded-b-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6" placeholder="Password">
        </div>
        <div>
            <label for="confirm-password" class="sr-only">Confirm Password</label>
            <input id="confirm-password" name="confirm-password" value="" type="password" autocomplete="current-password" required class="relative block w-full rounded-b-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6" placeholder="Confirm Password">
          </div>
      </div>

      <div>
        <button type="submit" class="register group relative flex w-full justify-center rounded-md bg-green-600 py-2 px-3 text-sm font-semibold text-white hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600">
          <span class="absolute inset-y-0 left-0 flex items-center pl-3">
            <svg class="h-5 w-5 text-green-500 group-hover:text-green-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z" clip-rule="evenodd" />
            </svg>
          </span>
          Register
        </button>
      </div>
    </form>
  </div>
</div>


<script>
  const RegisterButton = document.querySelector('button.register');

  RegisterButton.addEventListener('click', async (e) => {
    e.preventDefault();
    const username = document.querySelector('#username') as HTMLInputElement;
    const email = document.querySelector('#email-address') as HTMLInputElement;
    const password = document.querySelector('#password') as HTMLInputElement;
    const confirmPassword = document.querySelector('#confirm-password') as HTMLInputElement;

    const usernameValue = username.value;
    const emailValue = email.value;
    const passwordValue = password.value;
    const confirmPasswordValue = confirmPassword.value;

    if (!usernameValue || !emailValue || !passwordValue || !confirmPasswordValue) {
      alert('Please fill out all fields');
      return;
    }

    if (passwordValue !== confirmPasswordValue) {
      alert('Passwords do not match');
      return;
    }

    // add user to database and id must be lastUser.id + 1
    const lastUser = await fetch('http://localhost:8081/users').then((res) => res.json()).then((users) => users[users.length - 1]);
    const id = lastUser.id + 1;

    const user = {
      id,
      username: usernameValue,
      email: emailValue,
      password: passwordValue,
    };

    await fetch('http://localhost:8081/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(user),
    });

    alert('User created successfully');
    window.location.href = `http://localhost:3000/`;



  });
  </script>